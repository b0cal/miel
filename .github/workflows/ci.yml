name: CI

on:
  pull_request:
  push:
    # branches: [main, dev]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # Rust setup
      - uses: dtolnay/rust-toolchain@stable

      # NodeJS setup
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: src/webui/package-lock.json

      # Restore cargo cache (dependencies + cargo-make binary)
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install cargo-make if missing
      - name: Install cargo-make if missing
        run: |
          if ! command -v cargo-make >/dev/null 2>&1; then
            cargo install cargo-make
          fi

      - name: Install npm dependencies
        run: npm install -g markdownlint-cli2

      - name: Lint and format code
        run: cargo make fmt

      - name: Lint documentation
        run: cargo make doc-lint
        continue-on-error: true

      - name: Audit source code
        run: cargo make audit

      - name: Run CodeQL security analysis
        uses: github/codeql-action/init@v3
        with:
          languages: rust, javascript

  test:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: src/webui/package-lock.json

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-make if missing
        run: |
          if ! command -v cargo-make >/dev/null 2>&1; then
            cargo install cargo-make
          fi

      - name: Run Rust & NodeJS tests
        run: cargo make test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: src/webui/package-lock.json

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-make if missing
        run: |
          if ! command -v cargo-make >/dev/null 2>&1; then
            cargo install cargo-make
          fi

      - name: Build production binary
        run: cargo make prod
